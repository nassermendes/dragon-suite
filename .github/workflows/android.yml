name: Android Build

on:
  push:
    branches:
      - main
    paths:
      - 'android/**'
      - '.github/workflows/android.yml'
  workflow_dispatch:

jobs:
  build:
    name: Build APK
    runs-on: ubuntu-latest
    env:
      FIREBASE_APP_ID: "1:213187131988:android:dfb5d8b41717a252980bc1"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Create debug keystore
        working-directory: ./android/app
        run: |
          keytool -genkey -v -keystore debug.keystore \
            -storepass android -alias androiddebugkey \
            -keypass android -keyalg RSA -keysize 2048 \
            -validity 10000 -dname "CN=Android Debug,O=Android,C=US"

      - name: Decode google-services.json
        env:
          GOOGLE_SERVICES_JSON: ${{ secrets.GOOGLE_SERVICES_JSON }}
        run: |
          echo $GOOGLE_SERVICES_JSON | base64 -d > android/app/google-services.json
          ls -la android/app/google-services.json

      - name: Grant execute permission for gradlew
        run: chmod +x android/gradlew

      - name: Build Debug APK
        working-directory: ./android
        run: |
          ./gradlew clean
          ./gradlew assembleDebug --stacktrace
          ls -la app/build/outputs/apk/debug/

      - name: Setup Firebase CLI
        run: |
          # Install Firebase CLI
          curl -sL https://firebase.tools | bash
          
          # Create service account key file
          echo '${{ secrets.FIREBASE_SERVICE_CREDENTIALS }}' > service-account.json
          
          # Set environment variable for all subsequent steps
          echo "GOOGLE_APPLICATION_CREDENTIALS=$GITHUB_WORKSPACE/service-account.json" >> $GITHUB_ENV
          
          # Test Firebase CLI
          firebase --version

      - name: Debug Firebase Authentication
        env:
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
        run: |
          echo "=== Testing Firebase Authentication ==="
          echo "Project ID: $FIREBASE_PROJECT_ID"
          echo "Service account path: $GOOGLE_APPLICATION_CREDENTIALS"
          echo "Service account exists: $(test -f $GOOGLE_APPLICATION_CREDENTIALS && echo 'Yes' || echo 'No')"
          
          # Test authentication
          firebase projects:list --debug
          
          echo "=== Testing App Distribution Access ==="
          firebase appdistribution:apps:list --project $FIREBASE_PROJECT_ID --debug

      - name: Verify Firebase Distribution Groups
        if: success()
        env:
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
        run: |
          echo "=== Verifying Firebase Distribution Groups ==="
          echo "Using project ID: $FIREBASE_PROJECT_ID"
          
          # List available groups with error handling
          echo "Attempting to list groups..."
          if ! GROUPS=$(firebase appdistribution:groups:list --project $FIREBASE_PROJECT_ID --json 2>&1); then
            echo "Error listing groups: $GROUPS"
            exit 1
          fi
          
          echo "Available groups:"
          echo "$GROUPS"
          
          # Check if testers group exists
          if echo "$GROUPS" | grep -q '"name":"testers"'; then
            echo " 'testers' group found"
          else
            echo " 'testers' group not found. Please create it in Firebase Console."
            exit 1
          fi

      - name: Upload to Firebase App Distribution
        if: success()
        env:
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
        run: |
          # Upload APK with full debug output
          firebase appdistribution:distribute android/app/build/outputs/apk/debug/app-debug.apk \
            --app "$FIREBASE_APP_ID" \
            --groups "testers" \
            --debug \
            --release-notes "Debug build with latest changes from $(git rev-parse --short HEAD)"

      - name: Clean up secrets
        if: always()
        run: |
          rm -f android/app/google-services.json
          rm -f android/app/debug.keystore
          rm -f service-account.json
