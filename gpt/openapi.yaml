openapi: "3.1.0"
info:
  title: Dragon Suite API
  description: API for controlling Dragon Suite video recording and app features
  version: 2.0.0
servers:
  - url: https://api.dragonsuite.app/v1
    description: Dragon Suite API server
paths:
  /recording/start:
    post:
      summary: Start video recording
      description: Initiates video recording with specified quality settings
      operationId: startRecording
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecordingSettings'
      responses:
        '200':
          description: Recording started successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecordingStatus'

  /recording/stop:
    post:
      summary: Stop video recording
      description: Stops the current video recording session
      operationId: stopRecording
      responses:
        '200':
          description: Recording stopped successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecordingResult'

  /voice-command:
    post:
      summary: Execute voice command
      description: Process and execute voice commands for the app
      operationId: executeVoiceCommand
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VoiceCommand'
      responses:
        '200':
          description: Command executed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommandResult'

  /settings/check:
    get:
      summary: Check app settings and permissions
      description: Verify app permissions and settings status
      operationId: checkSettings
      responses:
        '200':
          description: Settings status retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettingsStatus'

components:
  schemas:
    RecordingSettings:
      type: object
      properties:
        quality:
          type: string
          enum: [high, medium, low]
          description: Recording quality setting
      required:
        - quality

    RecordingStatus:
      type: object
      properties:
        status:
          type: string
          enum: [recording, stopped, paused]
        sessionId:
          type: string
          description: Unique identifier for the recording session
      required:
        - status
        - sessionId

    RecordingResult:
      type: object
      properties:
        status:
          type: string
          enum: [stopped, failed]
        duration:
          type: integer
          description: Recording duration in seconds
        fileSize:
          type: integer
          description: Size of the recorded file in bytes
      required:
        - status
        - duration

    VoiceCommand:
      type: object
      properties:
        command:
          type: string
          description: Voice command text
        language:
          type: string
          default: en-US
          description: Language code for voice recognition
      required:
        - command

    CommandResult:
      type: object
      properties:
        action:
          type: string
          description: Action executed by the command
        status:
          type: string
          enum: [success, failed]
        message:
          type: string
          description: Additional information about the command execution
      required:
        - action
        - status

    SettingsStatus:
      type: object
      properties:
        permissions:
          type: object
          properties:
            microphone:
              type: boolean
            storage:
              type: boolean
          required:
            - microphone
            - storage
        fcmEnabled:
          type: boolean
        uploadEnabled:
          type: boolean
      required:
        - permissions
        - fcmEnabled
        - uploadEnabled

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - BearerAuth: []
